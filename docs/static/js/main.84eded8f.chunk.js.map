{"version":3,"sources":["resources/images/logo.png","resources/data/nanoleafData.js","components/Navbar/Navbar.js","components/Footer/Footer.js","components/RocketSVG/RocketSVG.js","components/Alert/Alert.js","components/Modal/Modal.js","App.js","resources/data/codeExamples.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","data","panelSize","8","numPanels","sideLength","positionData","panelId","x","y","o","color","10","6","4","2","Navbar","react_default","a","createElement","className","href","src","Logo","width","height","alt","Component","Footer","RocketSVG","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","flameRotation","circles","_this2","setInterval","setState","concat","Math","random","id","viewBox","r","cx","cy","fill","fillOpacity","points","d","style","transform","Alert","props","type","role","heading","children","Modal","updateField","fieldName","e","value","target","valid","validity","length","fields","objectSpread","defineProperty","handleMonthSelect","expirationMonth","handleYearSelect","expirationYear","handleFieldBlur","missingValues","handleAmountSelection","amount","checkout","loading","asyncToGenerator","regenerator_default","mark","_callee","_this$state$fields","creditCard","firstName","lastName","cvc","params","response","wrap","_context","prev","next","console","log","error","success","abrupt","method","headers","Content-Type","Accept","body","JSON","stringify","number","exp_month","exp_year","name","fetch","sent","json","errorMessage","t0","message","stop","visible","monthVisible","tabIndex","data-dismiss","aria-label","aria-hidden","Alert_Alert_Alert","borderTopRightRadius","borderBottomRightRadius","onClick","borderRadius","borderTopLeftRadius","borderBottomLeftRadius","htmlFor","onChange","step","min","onBlur","placeholder","required","pattern","onFocus","onMouseDown","Array","apply","map","Number","i","momentItem","moment","add","format","key","disabled","App","NanoleafData","currentRotationValue","rotationData","Modal_Modal_Modal","Navbar_Navbar_Navbar","NanoleafLayout_default","strokeWidth","strokeColor","RocketSVG_RocketSVG","prism","language","customStyle","backgroundColor","padding","fontFamily","lineNumberStyle","fontSize","coy","showLineNumbers","startingLineNumber","development","svgStyle","boxShadow","_ref","alert","onExit","panelToChange","panel","toConsumableArray","onHover","_ref2","filter","otherPanels","xmlns","data-toggle","data-target","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84eded8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0dbce86d.png\";","const data = {\n    panelSize: {\n        8: {\n            numPanels: 10,\n            sideLength: 150,\n            positionData: [{\n                panelId: 1,\n                x: 100,\n                y: 100,\n                o: 60,\n                color: '#6772E5'\n            }, {\n                panelId: 2,\n                x: 324,\n                y: 56,\n                o: 0,\n                color: '#6772E5'\n            }, {\n                panelId: 3,\n                x: 249,\n                y: -159,\n                o: 60,\n                color: '#6772E5'\n            }, {\n                panelId: 4,\n                x: 174,\n                y: 56,\n                o: 240,\n                color: '#6772E5'\n            }, {\n                panelId: 5,\n                x: 324,\n                y: -29,\n                o: 60,\n                color: '#6772E5'\n            }, {\n                panelId: 7,\n                x: 399,\n                y: 99,\n                o: 300,\n                color: '#6772E5'\n            }, {\n                panelId: 8,\n                x: 174,\n                y: -29,\n                o: 60,\n                color: '#6772E5'\n            }, {\n                panelId: 10,\n                x: 249,\n                y: -73,\n                o: 240,\n                color: '#6772E5'\n            }]\n        },\n        10: {\n            numPanels: 10,\n            sideLength: 150,\n            positionData: [{\n                panelId: 1,\n                x: 100,\n                y: 100,\n                o: 60\n            }, {\n                panelId: 2,\n                x: 324,\n                y: 56,\n                o: 0\n            }, {\n                panelId: 3,\n                x: 249,\n                y: -159,\n                o: 60\n            }, {\n                panelId: 4,\n                x: 174,\n                y: 56,\n                o: 240\n            }, {\n                panelId: 5,\n                x: 324,\n                y: -29,\n                o: 60\n            }, {\n                panelId: 6,\n                x: -49,\n                y: 100,\n                o: 60\n            }, {\n                panelId: 7,\n                x: 399,\n                y: 99,\n                o: 300\n            }, {\n                panelId: 8,\n                x: 174,\n                y: -29,\n                o: 60\n            }, {\n                panelId: 9,\n                x: 25,\n                y: 56,\n                o: 120\n            }, {\n                panelId: 10,\n                x: 249,\n                y: -73,\n                o: 240\n            }]\n        },\n        6: {\n            numPanels: 10,\n            sideLength: 150,\n            positionData: [{\n                panelId: 1,\n                x: 100,\n                y: 100,\n                o: 0\n            }, {\n                panelId: 2,\n                x: 25,\n                y: -29,\n                o: 240\n            }, {\n                panelId: 3,\n                x: 174,\n                y: -29,\n                o: 120\n            }, {\n                panelId: 4,\n                x: 99,\n                y: 13,\n                o: 180\n            }, {\n                panelId: 5,\n                x: 99,\n                y: -159,\n                o: 0\n            }, {\n                panelId: 6,\n                x: 25,\n                y: -116,\n                o: 60\n            }]\n        },\n        4: {\n            numPanels: 10,\n            sideLength: 150,\n            positionData: [{\n                panelId: 1,\n                x: 100,\n                y: 100,\n                o: 0,\n                color: '#3ECF8E'\n            }, {\n                panelId: 2,\n                x: 25,\n                y: -29,\n                o: 240,\n                color: '#3ECF8E'\n            }, {\n                panelId: 3,\n                x: 174,\n                y: -29,\n                o: 120,\n                color: '#3ECF8E'\n            }, {\n                panelId: 4,\n                x: 99,\n                y: 13,\n                o: 180,\n                color: '#3ECF8E'\n            }]\n        },\n        2: {\n            numPanels: 2,\n            sideLength: 150,\n            positionData: [\n                {\n                    panelId: 107,\n                    x: -74,\n                    y: 43,\n                    o: 180\n                },\n                {\n                    panelId: 114,\n                    x: -149,\n                    y: 0,\n                    o: 360\n                }\n            ]\n        }\n    }\n};\n\nexport default data;\n","import React, { Component } from 'react';\nimport Logo from '../../resources/images/logo.png';\nimport './Navbar.css';\n\nexport default class Navbar extends Component {\n  render() {\n      return (\n          <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm fixed-top\">\n              <a className=\"navbar-brand\" href=\"/\">\n                  <img src={Logo} width=\"30\" height=\"30\" alt=\"Triangle Logo\" />\n              </a>\n              <h5 className=\"my-0 mr-md-auto font-weight-normal\">Nanoleaf Layout</h5>\n              <nav className=\"my-2 my-md-0 mr-md-3\">\n                  <a className=\"p-2 text-dark\" href=\"#about\">About</a>\n                  <a className=\"p-2 text-dark\" href=\"#examples\">Examples</a>\n                  <a className=\"p-2 text-dark\" href=\"#sponsor\">Sponsor</a>\n                  <a className=\"p-2 text-dark\" href=\"https://github.com/cbartram/nanoleaf-layout\">Github</a>\n                  <a className=\"p-2 text-dark\" href=\"#support\">Support</a>\n              </nav>\n          </div>\n      )\n  }\n}\n","import React, { Component } from 'react';\nimport Logo from '../../resources/images/logo.png';\n\n  export default class Footer extends Component {\n    render() {\n        return (\n            <footer className=\"pt-4 pt-md-5 border-top\">\n                <div className=\"row pl-4\">\n                    <div className=\"col-12 col-md\">\n                        <img className=\"mb-2\" src={Logo} alt=\"Triangle Logo\" width=\"24\" height=\"24\" />\n                        <small className=\"d-block mb-3 text-muted\">© 2018-2019</small>\n                    </div>\n                    <div className=\"col-6 col-md\">\n                        <h5>Features</h5>\n                        <ul className=\"list-unstyled text-small\">\n                            <li><a className=\"text-muted\" href=\"https://github.com/cbartram/nanoleaf-layout\">Github</a></li>\n                            <li><a className=\"text-muted\" href=\"#about\">About</a></li>\n                            <li><a className=\"text-muted\" href=\"https://nanoleaf.me/en/\">Nanoleaf</a></li>\n                            <li><a className=\"text-muted\" href=\"https://reactjs.org/\">React Library</a></li>\n                            <li><a className=\"text-muted\" href=\"https://www.npmjs.com\">NPM</a></li>\n                            <li><a className=\"text-muted\" href=\"#getting-started\">Getting Started</a></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-6 col-md\">\n                        <h5>Resources</h5>\n                        <ul className=\"list-unstyled text-small\">\n                            <li><a className=\"text-muted\" href=\"#examples\">Documentation</a></li>\n                            <li><a className=\"text-muted\" href=\"#feedback\">Feedback</a></li>\n                            <li><a className=\"text-muted\" href=\"https://github.com/cbartram/nanoleaf-layout/issues\">Issues</a></li>\n                            <li><a className=\"text-muted\" href=\"https://github.com/cbartram/nanoleaf-layout/issues\">Bugs</a></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-6 col-md\">\n                        <h5>About</h5>\n                        <ul className=\"list-unstyled text-small\">\n                            <li><a className=\"text-muted\" href=\"#about\">Team</a></li>\n                            <li><a className=\"text-muted\" href=\"#about\">Locations</a></li>\n                            <li><a className=\"text-muted\" href=\"#about\">Privacy</a></li>\n                            <li><a className=\"text-muted\" href=\"#about\">Terms</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </footer>\n        )\n    }\n  }\n","import React, { Component } from 'react';\nimport './RocketSVGStyle.css';\n\nexport default class RocketSVG extends Component {\n  constructor() {\n      super();\n\n      this.state = {\n          flameRotation: 'scale(.91, .93)',\n          circles: [],\n      }\n  }\n\n  componentDidMount() {\n      // Handles the Flame animating at the end of the rocket\n      setInterval(() => {\n          this.setState({\n              flameRotation: `scale(${Math.random() * (1 - 0.8) + 0.8}, ${Math.random() * (1 - 0.75) + 0.75})`\n          });\n      }, 100);\n\n      // setInterval(() => {\n      //     const { circles } = this.state;\n      //     circles.push({\n      //             fillOpacity: '',\n      //             radius: Math.random() * (1.1 - 0.2) + 0.2, // [1.1, .2]\n      //             cx: '',\n      //             cy: '',\n      //     });\n      // }, 500);\n  }\n\n    render() {\n    return (\n        <div className=\"d-flex justify-content-center\">\n        <svg id=\"rocket-icon\" viewBox=\"0 0 75 75\">\n            <circle r=\"0.8427646435858045\" cx=\"72.93964103630971\" cy=\"25.388473334258148\" fill=\"#AAB7C4\"\n                    fillOpacity=\"0.03321566147217462\" />\n            <circle r=\"1.117091671828614\" cx=\"66.85047768453374\" cy=\"54.85095311823642\" fill=\"#AAB7C4\"\n                    fillOpacity=\"0.19328940337054923\" />\n            <circle r=\"0.767863200921622\" cx=\"63.520176059707865\" cy=\"49.5555707025003\" fill=\"#AAB7C4\"\n                    fillOpacity=\"0.2916236754198105\" />\n            <circle r=\"0.33776675044071697\" cx=\"59.32300012752751\" cy=\"36.188215175007564\" fill=\"#AAB7C4\"\n                    fillOpacity=\"0.41276402898132303\" />\n            <circle r=\"0.9327220750144778\" cx=\"51.46812528059661\" cy=\"14.043759418049284\" fill=\"#AAB7C4\"\n                    fillOpacity=\"0.6180157213437937\" />\n            <circle r=\"0.4492392901894387\" cx=\"43.52859672170807\" cy=\"61.335790813532626\" fill=\"#AAB7C4\"\n                    fillOpacity=\"0.8372881796159243\" />\n            <circle r=\"1.0504511001984587\" cx=\"38.75058146219085\" cy=\"10.000004282038754\" fill=\"#AAB7C4\"\n                    fillOpacity=\"0.9656900702494658\" />\n            <circle r=\"0.22410309202800965\" cx=\"33.05891454051701\" cy=\"70.85143627751522\" fill=\"#AAB7C4\"\n                    fillOpacity=\"0.8808590583226663\" />\n            <circle r=\"1.1269803224306842\" cx=\"27.8544012470187\" cy=\"39.98776375561521\" fill=\"#AAB7C4\"\n                    fillOpacity=\"0.7348144630694604\" />\n            <circle r=\"0.3374141841383392\" cx=\"17.918826090392997\" cy=\"26.205958855810966\" fill=\"#AAB7C4\"\n                    fillOpacity=\"0.47309441795491525\" />\n            <circle r=\"0.5488792838352285\" cx=\"18.834563880163238\" cy=\"71.3914889374521\" fill=\"#AAB7C4\"\n                    fillOpacity=\"0.4948614342928084\" />\n            <circle r=\"0.8777949247574319\" cx=\"10.142404824139732\" cy=\"52.06308618263782\" fill=\"#AAB7C4\"\n                    fillOpacity=\"0.252977937301907\" />\n            <circle r=\"0.5894844538171464\" cx=\"5.54500972499909\" cy=\"23.343604841894923\" fill=\"#AAB7C4\"\n                    fillOpacity=\"0.13425781780212565\" />\n            <circle r=\"0.47546633811737476\" cx=\"0.9572206586204572\" cy=\"49.93326672121721\" fill=\"#AAB7C4\"\n                    fillOpacity=\"0.013011759308100501\" />\n            <polygon fill=\"#68D4F8\" points=\"18 21 35 21 44 30 27 30\" />\n            <polygon fill=\"#68D4F8\" points=\"27 45 44 45 35 54 18 54\" />\n            <path fill=\"#68D4F8\"\n                  d=\"M30.94 47.7c-3.79-.93-6.98-2.35-9.25-4.07a14.88 14.88 0 0 0 0-12.26c2.27-1.72 5.46-3.14 9.25-4.08A14.72 14.72 0 0 1 35 37.5c0 3.98-1.55 7.59-4.06 10.2z\" />\n            <path fill=\"#8DDEF9\"\n                  d=\"M30.94 27.3c-3.79.93-6.98 2.35-9.25 4.07.84 1.86 1.31 3.94 1.31 6.13h12c0-3.98-1.55-7.59-4.06-10.2z\" />\n            <path fill=\"#68D4F8\"\n                  d=\"M57.06 30.13C62.5 33.1 66 36.73 66 37.5c0 .77-3.49 4.4-8.94 7.37A14.83 14.83 0 0 0 59 37.5c0-2.7-.7-5.21-1.94-7.37z\" />\n            <path fill=\"#8DDEF9\"\n                  d=\"M57.06 30.13C62.5 33.1 66 36.73 66 37.5h-7c0-2.7-.7-5.21-1.94-7.37z\" />\n            <path fill=\"#ECFAFF\"\n                  d=\"M57.06 44.87C52.94 47.12 47.7 49 42 49c-3.99 0-7.75-.47-11.06-1.3A14.72 14.72 0 0 0 35 37.5c0-3.98-1.55-7.59-4.06-10.2C34.25 26.46 38.01 26 42 26c5.7 0 10.94 1.88 15.06 4.13A14.83 14.83 0 0 1 59 37.5c0 2.7-.7 5.21-1.94 7.37z\" />\n            <path fill=\"#FCFEFF\"\n                  d=\"M57.06 30.13C52.94 27.88 47.7 26 42 26c-3.99 0-7.75.47-11.06 1.3A14.72 14.72 0 0 1 35 37.5h24c0-2.7-.7-5.21-1.94-7.37z\" />\n            <circle cx=\"49.5\" cy=\"37.5\" r=\"3.5\" fill=\"#68D4F8\" />\n            <path fill=\"#8DDEF9\" d=\"M46 37.5h7a3.5 3.5 0 0 0-7 0z\" />\n            <path fill=\"#68D4F8\" d=\"M21 37.5c0-10.04-11 0-12 0 1 0 12 10.04 12 0z\" className=\"flame\" style={{ transform: this.state.flameRotation }} />\n        </svg>\n        </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './Alert.css';\n\nexport default class Alert extends Component {\n  render() {\n      return (\n          <div className={`alert alert-${this.props.type}`} role=\"alert\">\n              <h4 className=\"alert-heading\">{this.props.heading}</h4>\n              {this.props.children}\n          </div>\n      )\n  }\n}\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport './Modal.css';\nimport Alert from \"../Alert/Alert\";\n\nexport default class Modal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            visible: false, // Is the dropdown for the expiration year visible?\n            monthVisible: false, // Is the dropdown for the expiration month visible?\n            error: null, // Was there an error processing payment?\n            success: false, // Was the request successful?\n            loading: false, // If the request is processing we don't want users to accidentally submit duplicate payments\n            fields: {\n                firstName: '',\n                lastName: '',\n                creditCard: '',\n                expirationMonth: '',\n                expirationYear: '',\n                cvc: '',\n                amount: 0,\n            },\n            missingValues: {\n                firstName: false,\n                lastName: false,\n                creditCard: false,\n                cvc: false,\n            }\n        }\n    }\n\n    updateField = (fieldName, e) => {\n        let value = e.target.value;\n        const valid = e.target.validity.valid || value.length === 0;\n\n        // Convert $ -> ¢\n        if(fieldName === 'amount')\n            value = (+value * 100);\n\n        this.setState({\n            fields: {\n                ...this.state.fields,\n                [fieldName]: valid ? value : this.state.fields[fieldName], // Only apply to state if its value\n            }\n        });\n    };\n\n    /**\n     * Updates the month field in the form based on a users selection\n     * @param expirationMonth String expiration month that has been selected\n     */\n    handleMonthSelect = (expirationMonth) => {\n        this.setState({\n            fields: {\n                ...this.state.fields,\n                expirationMonth\n            }\n        });\n    };\n\n    /**\n     * Updates the year field in the form based on the users selection\n     * @param expirationYear\n     */\n    handleYearSelect = (expirationYear) => {\n        this.setState({\n            fields: {\n                ...this.state.fields,\n                expirationYear\n            }\n        });\n    };\n\n    /**\n     * Handles showing a warning or error if the field is not filled correctly\n     * @param fieldName String name of the field corresponding to\n     */\n    handleFieldBlur = (fieldName) => {\n        if(this.state.fields[fieldName].length === 0) {\n            this.setState({\n                missingValues: {\n                    ...this.state.missingValues,\n                    [fieldName]: true,\n                }\n            })\n        }\n    };\n\n    /**\n     * Handles updating the state to reflect the selected amount the user wishes to donate\n     * @param amount Integer amount of money in ¢ the users wishes to donate\n     */\n    handleAmountSelection = (amount) => {\n        this.setState({\n            fields: {\n                ...this.state.fields,\n                amount,\n            }\n        });\n    };\n\n    /**\n     * Handles making the POST request containing the CC details to the backend\n     */\n    checkout = () => {\n        this.setState({ loading: true }, async () => {\n            console.log('[INFO] Attempting to process card information');\n            const {\n                creditCard,\n                firstName,\n                lastName,\n                cvc,\n                expirationMonth,\n                expirationYear,\n                amount\n            } = this.state.fields;\n            // TODO Validate Fields\n\n            // If any of the fields are blank do not submit the request\n            if(creditCard.length === 0 || firstName.length === 0 || amount < 200 || lastName.length === 0 || cvc.length === 0 || expirationMonth.length === 0 || expirationYear.length === 0) {\n                this.setState({ error: 'Some of the fields were left blank!', success: false, loading: false });\n                return;\n            }\n\n\n            const params = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    number: creditCard,\n                    exp_month: expirationMonth,\n                    exp_year: expirationYear,\n                    cvc: cvc,\n                    name: `${firstName} ${lastName}`,\n                    amount\n                })\n            };\n\n            try {\n                let response = await (await fetch('https://e7pdt8qmt1.execute-api.us-east-1.amazonaws.com/Dev/charge/create', params)).json();\n\n                // Something went wrong with the request\n                if(response.errorMessage)\n                    this.setState({ error: response.errorMessage, success: false, loading: false });\n                else\n                // Reset all the fields and show a success message\n                    this.setState({\n                        success: true,\n                        loading: false,\n                        error: '',\n                        fields: {\n                            firstName: '',\n                            lastName: '',\n                            amount: 0,\n                            expirationYear: '',\n                            expirationMonth: '',\n                            creditCard: '',\n                            cvc: ''\n                        },\n                        missingValues: {\n                            firstName: false,\n                            lastName: false,\n                            creditCard: false,\n                            cvc: false,\n                        }\n                    });\n            } catch(err) {\n                console.log(err);\n                this.setState({ error: err.message, success: false, loading: false });\n            }\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"modal\" id=\"payment-modal\" tabIndex=\"-1\" role=\"dialog\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">Become a Backer</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            {/* Show the error/success Alerts after the payment is submitted */}\n                            {\n                                this.state.error &&\n                                <Alert type=\"danger\" heading=\"Error\">\n                                    <p>\n                                        Unfortunately something went wrong processing your payment information. Ensure your\n                                        card information is typed correctly and matches the details on your credit or debit card.\n                                    </p>\n                                    <hr />\n                                    <p>\n                                        You can try again by resubmitting the form below! Details of the error: &nbsp;\n                                        { this.state.error }\n                                    </p>\n                                </Alert>\n                            }\n\n                            {\n                                this.state.success &&\n                                <Alert type=\"success\" heading=\"Thank You\">\n                                    <p>\n                                        Thank you for your generous donation to Nanoleaf Layout and helping to support the open source\n                                        community.\n                                    </p>\n                                    <hr />\n                                    <p>\n                                        We sincerely appreciate it!\n                                    </p>\n                                </Alert>\n                            }\n\n                            {/* Donation Amount Button Group */}\n                            <div className=\"btn-group ml-2\" role=\"group\" aria-label=\"First group\">\n                                <button type=\"button\" className={`common-Button ${this.state.fields.amount === 200 ? 'selected': '' }`} style={{ borderTopRightRadius: 0, borderBottomRightRadius: 0 }} onClick={() => this.handleAmountSelection(200)}>$2.00</button>\n                                <button type=\"button\" className={`common-Button ${this.state.fields.amount === 500 ? 'selected': '' }`} style={{ borderRadius: 0 }} onClick={() => this.handleAmountSelection(500)}>$5.00</button>\n                                <button type=\"button\" className={`common-Button ${this.state.fields.amount === 1000 ? 'selected': '' }`} style={{ borderRadius: 0 }} onClick={() => this.handleAmountSelection(1000)}>$10.00</button>\n                                <button type=\"button\" className={`common-Button ${this.state.fields.amount === 2500 ? 'selected': '' }`} style={{ borderRadius: 0 }} onClick={() => this.handleAmountSelection(2500)}>$25.00</button>\n                                <button type=\"button\" className={`common-Button ${this.state.fields.amount === 5000 ? 'selected': '' }`} style={{ borderRadius: 0 }} onClick={() => this.handleAmountSelection(5000)}>$50.00</button>\n                                <button type=\"button\" className={`common-Button ${this.state.fields.amount === 10000 ? 'selected': '' }`} style={{ borderTopLeftRadius: 0, borderBottomLeftRadius: 0 }} onClick={() => this.handleAmountSelection(10000)}>$100.00</button>\n                            </div>\n\n                            <div className=\"form-row text amount\">\n                                <label className=\"amount\" htmlFor=\"amount\">Custom Amount ($)</label>\n                                <input type=\"number\" name=\"amount\" id=\"amount\" onChange={(e) => this.updateField('amount', e)} step=\"1\" min=\"2\" className=\"form-control\" />\n                            </div>\n\n                            <div className=\"form-row text firstname\">\n                                <label className=\"firstname\" htmlFor=\"firstname\">Your first name</label>\n                                <input\n                                    onBlur={() => this.handleFieldBlur('firstName')}\n                                    onChange={(e) => this.updateField('firstName', e)}\n                                    value={this.state.fields.firstName}\n                                    id=\"firstname\"\n                                    name=\"firstname\"\n                                    type=\"text\"\n                                    placeholder=\"Jürgen\"\n                                    className={`${this.state.missingValues['firstName'] ? 'missing-value' : ''}`}\n                                    required\n                                />\n                            </div>\n                            <div className=\"form-row text lastname\">\n                                <label className=\"lastname\" htmlFor=\"lastname\">Your last name</label>\n                                <input\n                                    onBlur={() => this.handleFieldBlur('lastName')}\n                                    onChange={(e) => this.updateField('lastName', e)}\n                                    value={this.state.fields.lastName}\n                                    id=\"lastname\"\n                                    name=\"lastname\"\n                                    type=\"text\"\n                                    placeholder=\"Windcaller\"\n                                    className={`${this.state.missingValues['lastName'] ? 'missing-value' : ''}`}\n                                    required\n                                />\n                            </div>\n                            <div className=\"form-row text cc\">\n                                <label className=\"cc\" htmlFor=\"cc\">Credit Card Number</label>\n                                <input\n                                    onBlur={() => this.handleFieldBlur('creditCard')}\n                                    onChange={(e) => this.updateField('creditCard', e)}\n                                    value={this.state.fields.creditCard}\n                                    pattern=\"[0-9]*\"\n                                    id=\"cc\"\n                                    name=\"cc\"\n                                    type=\"text\"\n                                    placeholder=\"4444 4444 4444 4444\"\n                                    className={`${this.state.missingValues['creditCard'] ? 'missing-value' : ''}`}\n                                    required\n                                />\n                            </div>\n                            <div className=\"form-row text expiration\">\n                                <label className=\"expiration\" htmlFor=\"expirationMonth\">Expiration Month</label>\n                                <input\n                                    id=\"expirationMonth\"\n                                    name=\"expirationMonth\"\n                                    onBlur={() => this.setState({ monthVisible: false })}\n                                    onFocus={() => this.setState({ monthVisible: true })}\n                                    onChange={() => {}}\n                                    type=\"text\"\n                                    pattern=\"[0-9]*\"\n                                    placeholder=\"08\"\n                                    value={this.state.fields.expirationMonth}\n                                    required\n                                />\n                                <div className={`select-dropdown ${!this.state.monthVisible && 'hidden'}`}>\n                                    <ul className=\"select-results\">\n                                        <li className=\"select-result\" onMouseDown={() => this.handleMonthSelect('01')}>\n                                            01\n                                        </li>\n                                        <li className=\"select-result\" onMouseDown={() => this.handleMonthSelect('02')}>\n                                            02\n                                        </li>\n                                        <li className=\"select-result\" onMouseDown={() => this.handleMonthSelect('03')}>\n                                            03\n                                        </li>\n                                        <li className=\"select-result\" onMouseDown={() => this.handleMonthSelect('04')}>\n                                            04\n                                        </li>\n                                        <li className=\"select-result\" onMouseDown={() => this.handleMonthSelect('05')}>\n                                            05\n                                        </li>\n                                        <li className=\"select-result\" onMouseDown={() => this.handleMonthSelect('06')}>\n                                            06\n                                        </li>\n                                        <li className=\"select-result\" onMouseDown={() => this.handleMonthSelect('07')}>\n                                            07\n                                        </li>\n                                        <li className=\"select-result\" onMouseDown={() => this.handleMonthSelect('08')}>\n                                            08\n                                        </li>\n                                        <li className=\"select-result\" onMouseDown={() => this.handleMonthSelect('09')}>\n                                            09\n                                        </li>\n                                        <li className=\"select-result\" onMouseDown={() => this.handleMonthSelect('10')}>\n                                            10\n                                        </li>\n                                        <li className=\"select-result\" onMouseDown={() => this.handleMonthSelect('11')}>\n                                            11\n                                        </li>\n                                        <li className=\"select-result\" onMouseDown={() => this.handleMonthSelect('12')}>\n                                            12\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div className=\"form-row text expiration\">\n                                <label className=\"expiration\" htmlFor=\"expiration\">Expiration Year</label>\n                                <input\n                                    id=\"expiration\"\n                                    name=\"expiration\"\n                                    onBlur={() => this.setState({ visible: false })}\n                                    onFocus={() => this.setState({ visible: true })}\n                                    onChange={() => {}}\n                                    type=\"text\"\n                                    pattern=\"[0-9]*\"\n                                    placeholder=\"18\"\n                                    value={this.state.fields.expirationYear}\n                                    required\n                                />\n                                <div className={`select-dropdown ${!this.state.visible && 'hidden'}`}>\n                                    <ul className=\"select-results\">\n                                        {\n                                            Array.apply(null, { length: 50 }).map(Number.call, Number)\n                                                .map(i => {\n                                                    let momentItem = moment().add(i, 'years').format('YYYY');\n                                                    return (\n                                                        <li className=\"select-result\" key={i} onMouseDown={() => this.handleYearSelect(momentItem)}>\n                                                            { momentItem }\n                                                        </li>\n                                                    )\n                                                })\n                                        }\n                                    </ul>\n                                </div>\n                            </div>\n                            <div className=\"form-row text security\">\n                                <label className=\"security\" htmlFor=\"security\">CCV Security Code</label>\n                                <input\n                                    id=\"security\"\n                                    name=\"security\"\n                                    type=\"text\"\n                                    placeholder=\"123\"\n                                    required\n                                    onBlur={() => this.handleFieldBlur('cvc')}\n                                    onChange={(e) => this.updateField('cvc', e)}\n                                    value={this.state.fields.cvc}\n                                    pattern=\"[0-9]*\"\n                                    className={`${this.state.missingValues['cvc'] ? 'missing-value' : ''}`}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"common-Button\" data-dismiss=\"modal\">Close</button>\n                            {\n                                this.state.loading ? <button type=\"button\" className=\"common-Button common-Button--default\" disabled>Processing <i className=\"fas fa-circle-notch\" /></button> :\n                                <button type=\"button\" className=\"common-Button common-Button--default\" onClick={() => this.checkout()}>Place Order</button>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport NanoleafLayout from 'nanoleaf-layout/lib/NanoleafLayout';\nimport NanoleafData from './resources/data/nanoleafData';\nimport {\n    basicExample,\n    propsExample,\n    mappingExample,\n    colorExample,\n    eventExample\n} from './resources/data/codeExamples';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Footer from \"./components/Footer/Footer\";\nimport RocketSVG from \"./components/RocketSVG/RocketSVG\";\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { coy } from 'react-syntax-highlighter/dist/styles/prism';\nimport Modal from \"./components/Modal/Modal\";\n\nclass App extends Component {\n  constructor() {\n      super();\n\n      this.state = {\n          data: NanoleafData,\n          currentRotationValue: [0.3, 0],\n          rotationData: 'rotateX(.18283rad) rotateY(.123819rad)' //{ X: [.3, -.1], Y: [-.6, 0]}\n      }\n  };\n    render() {\n    return (\n      <div className=\"container-fluid\">\n          <Modal/>\n          <Navbar/>\n          <div className=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\" id=\"getting-started\">\n              <h1 className=\"display-4\">Nanoleaf Layout</h1>\n              <p className=\"lead\">Instantly show a real time visual representation of a physical Nanoleaf structure on the web.</p>\n              <div className=\"row d-flex justify-content-center align-items-center\">\n                  <div className=\"col-md-4\">\n                      <div className=\"d-flex justify-content-center align-items-center\">\n                         <div className=\"nanoleaf-container-md\">\n                            <NanoleafLayout\n                                data={this.state.data.panelSize['8']}\n                            />\n                         </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n              {/* About Section */}\n              <div className=\"row section-gray pt-3 pb-3\">\n                  <div className=\"col-md-5 ml-3\">\n                      <h1 className=\"display-5 right\"  id=\"about\">About</h1>\n                      <p className=\"common-body-text\">\n                          Nanoleaf Layout is the only package on NPM which takes your physical Nanoleaf layout and displays it in any 2D application.\n                          Nanoleaf Layout will take in the confusing X,Y coordinates and Orientation that comes from Nanoleaf's OpenAPI and converts\n                          it into a useful 2D graphic visual which you can use in your React application! Nanoleaf is a revolutionary smart lighting product which is fun and easy to use! It can be connected\n                          into different patterns with varying effects and colors. Ultimately this library helps open up new doors that allow users to intuitively interact with their\n                          Nanoleaf on a computer, phone, or tablet!\n                      </p>\n                  </div>\n                  <div className=\"col-md-4 offset-md-1\">\n                      <div className=\"nanoleaf-container-md\">\n                          <NanoleafLayout\n                            data={this.state.data.panelSize['4']}\n                            strokeWidth={5}\n                            strokeColor={'#f6f9fc'}\n                          />\n                      </div>\n                  </div>\n              </div>\n              {/* Examples */}\n              <div className=\"row pt-3 pb-3\">\n                  <div className=\"col-md-7 offset-md-2\">\n                      <div className=\"d-flex flex-column justify-content-center\">\n                          <RocketSVG />\n                          <div className=\"d-flex justify-content-center\">\n                          <h1 className=\"display-5\" id=\"example\">Examples</h1>\n                          </div>\n                          <p className=\"common-body-text center\">\n                              This section details some code examples and the output they return to help you understand all the features\n                              Nanoleaf Layout has to offer. These examples include things like using props, handling errors, formatting data,\n                              and hooking into events to help your experience with Nanoleaf Layout blast off!\n                          </p>\n                      </div>\n                  </div>\n              </div>\n              {/* Example */}\n              <div className=\"row\" id=\"examples\">\n                  <div className=\"col-md-2 offset-md-2 pt-4\">\n                      <div className=\"nanoleaf-container-md\">\n                        <NanoleafLayout data={this.state.data.panelSize[2]}/>\n                      </div>\n                  </div>\n                  <div className=\"col-md-5 offset-md-1\">\n                      <h1 className=\"display-6\">Bare Minimum</h1>\n                      <p className=\"common-body-text right\">\n                          This is a bare minimum example of a simple Nanoleaf Layout React Component using the only required\n                          prop <code>data</code>.\n                      </p>\n                      <SyntaxHighlighter\n                          language='javascript'\n                          customStyle={{\n                              borderRadius: 5,\n                              backgroundColor: '#f7f8f9',\n                              padding: '11px 14px 11px 14px',\n                              color: '#424770',\n                              fontFamily: 'Source Code Pro,Consolas,Menlo,monospace'\n                          }}\n                          lineNumberStyle={{\n                            fontSize: '13px',\n                            color: '#bec5ca'\n                          }}\n                          style={coy}\n                          showLineNumbers\n                          startingLineNumber={1}\n                      >\n                          {basicExample}\n                      </SyntaxHighlighter>\n                  </div>\n              </div>\n              <div className=\"row\">\n                  <div className=\"col-md-2 offset-md-2 pt-4\">\n                      <div className=\"nanoleaf-container-md\">\n                          <NanoleafLayout\n                              data={{\n                                  numPanels: 10,\n                                  sideLength: 150,\n                                  positionData: [{\n                                      panelId: 1,\n                                      x: 100,\n                                      y: 100,\n                                      o: 0,\n                                      color: '#408af8',\n                                      strokeColor: '#00ff00'\n                                  }, {\n                                      panelId: 2,\n                                      x: 25,\n                                      y: -29,\n                                      o: 240,\n                                      color: 'blue',\n                                      strokeColor: '#00ff00'\n                                  }, {\n                                      panelId: 3,\n                                      x: 174,\n                                      y: -29,\n                                      o: 120,\n                                      color: '#3ecf8e',\n                                      strokeColor: '#00ff00'\n                                  }, {\n                                      panelId: 4,\n                                      x: 99,\n                                      y: 13,\n                                      o: 180,\n                                      color: '#d7fafc'\n                                  }, {\n                                      panelId: 5,\n                                      x: 99,\n                                      y: -159,\n                                      o: 0,\n                                      color: '#6B7C93'\n                                  }, {\n                                      panelId: 6,\n                                      x: 25,\n                                      y: -116,\n                                      o: 60,\n                                      color: '#6772e5'\n                                  }]\n                              }}\n                          />\n                      </div>\n                  </div>\n                  <div className=\"col-md-5 offset-md-1\">\n                      <h1 className=\"display-6\">Panel Color and Stroke Color</h1>\n                      <p className=\"common-body-text right\">\n                          This example details how to control each panel's color and stroke color individually. Normally the\n                          Nanoleaf OpenAPI does not return color's for each panel however, by mapping over each panel in the array you\n                          can easily add a <code>color</code> property!\n                      </p>\n                      <SyntaxHighlighter\n                          language='javascript'\n                          customStyle={{\n                              borderRadius: 5,\n                              backgroundColor: '#f7f8f9',\n                              padding: '11px 14px 11px 14px',\n                              color: '#424770',\n                              fontFamily: 'Source Code Pro,Consolas,Menlo,monospace'\n                          }}\n                          lineNumberStyle={{\n                              fontSize: '13px',\n                              color: '#bec5ca'\n                          }}\n                          style={coy}\n                          showLineNumbers\n                          startingLineNumber={1}\n                      >\n                          {mappingExample}\n                      </SyntaxHighlighter>\n                      <SyntaxHighlighter\n                          language='javascript'\n                          customStyle={{\n                              borderRadius: 5,\n                              backgroundColor: '#f7f8f9',\n                              padding: '11px 14px 11px 14px',\n                              color: '#424770',\n                              fontFamily: 'Source Code Pro,Consolas,Menlo,monospace'\n                          }}\n                          lineNumberStyle={{\n                              fontSize: '13px',\n                              color: '#bec5ca'\n                          }}\n                          style={coy}\n                          showLineNumbers\n                          startingLineNumber={1}\n                      >\n                          {colorExample}\n                      </SyntaxHighlighter>\n                  </div>\n              </div>\n              <div className=\"row\">\n                  <div className=\"col-md-2 offset-md-2 pt-4\">\n                      <div className=\"nanoleaf-container-md\">\n                          <NanoleafLayout\n                              strokeWidth={10}\n                              development\n                              svgStyle={{\n                                  color: '#6b7c93',\n                                  boxShadow: '0 13px 27px -5px rgba(50,50,93,.25), 0 8px 16px -8px rgba(0,0,0,.3)',\n                                  borderRadius: 8,\n                              }}\n                              data={this.state.data.panelSize[10]}\n                          />\n                      </div>\n                  </div>\n                  <div className=\"col-md-5 offset-md-1\">\n                      <h1 className=\"display-6\">Using Nanoleaf Props</h1>\n                      <p className=\"common-body-text right\">\n                          There are a few additional props that Nanoleaf Layout provides\n                          to help you customize and tweak the layout to suite your needs. The following example\n                          demonstrates the use of the <code>svgStyle</code>,&nbsp;<code>strokeWidth</code>, and <code>development</code>&nbsp;\n                          props.\n                      </p>\n                      <SyntaxHighlighter\n                          language='javascript'\n                          customStyle={{\n                              borderRadius: 5,\n                              backgroundColor: '#f7f8f9',\n                              padding: '11px 14px 11px 14px',\n                              color: '#424770',\n                              fontFamily: 'Source Code Pro,Consolas,Menlo,monospace'\n                          }}\n                          lineNumberStyle={{\n                              fontSize: '13px',\n                              color: '#bec5ca'\n                          }}\n                          style={coy}\n                          showLineNumbers\n                          startingLineNumber={1}\n                      >\n                          {propsExample}\n                      </SyntaxHighlighter>\n                  </div>\n              </div>\n          <div className=\"row\">\n              <div className=\"col-md-2 offset-md-2 pt-4\">\n                  <div className=\"nanoleaf-container-md\">\n                      <NanoleafLayout\n                          data={this.state.data.panelSize[4]}\n                          onClick={({ panelId }) => {\n                              panelId === 4 ? alert('You clicked panel #4!') : alert('Thats not the right panel try again!');\n                          }}\n                          onExit={() => {\n                            let panelSize = this.state.data.panelSize;\n\n                            // Convert them all back to green\n                            let panelToChange = panelSize['4'].positionData.map(panel => {\n                                return {\n                                    ...panel,\n                                    color: '#3ECF8E'\n                                }\n                            });\n\n                            panelSize['4'].positionData = [...panelToChange];\n\n                            this.setState({\n                                data: {\n                                    panelSize\n                                }\n                            });\n                          }}\n                          onHover={({ panelId }) => {\n                            let panelSize  = this.state.data.panelSize;\n\n                            let panelToChange = panelSize['4'].positionData.filter(panel => panel.panelId === panelId)[0];\n                            let otherPanels = panelSize['4'].positionData.filter(panel => panel.panelId !== panelId).map(panel => {\n                                return {\n                                    ...panel,\n                                    color: '#3ECF8E'\n                                }\n                            });\n                            panelToChange.color = '#70e6ff';\n                            panelSize['4'].positionData = [...otherPanels, panelToChange];\n                             this.setState({\n                                 data: {\n                                     panelSize\n                                 }\n                             })\n                          }}\n                      />\n                  </div>\n              </div>\n              <div className=\"col-md-5 offset-md-1\">\n                  <h1 className=\"display-6\">Callbacks and Events</h1>\n                  <p className=\"common-body-text right\">\n                      This example demonstrates how to use the Nanoleaf's built in callback system to hook into events\n                      such as <code>onClick()</code>, <code>onHover()</code>, and <code>onExit()</code>. With these events\n                      you can program a more interactive Nanoleaf Layout for your users try it yourself in the example to the left!\n                      Events are new in version 2.0.0 of Nanoleaf Layout. You can get the latest version by running <code>npm install nanoleaf-layout@latest</code>\n                  </p>\n                  <SyntaxHighlighter\n                      language='javascript'\n                      customStyle={{\n                          borderRadius: 5,\n                          backgroundColor: '#f7f8f9',\n                          padding: '11px 14px 11px 14px',\n                          color: '#424770',\n                          fontFamily: 'Source Code Pro,Consolas,Menlo,monospace'\n                      }}\n                      lineNumberStyle={{\n                          fontSize: '13px',\n                          color: '#bec5ca'\n                      }}\n                      style={coy}\n                      showLineNumbers\n                      startingLineNumber={1}\n                  >\n                      {eventExample}\n                  </SyntaxHighlighter>\n              </div>\n          </div>\n          {/* Donate Section */}\n          <div className=\"row section-dark-blue\" id=\"sponsor\">\n              <div className=\"col-md-5 offset-md-3 py-3\">\n                  <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                      <svg width=\"80\" height=\"80\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\">\n                          <circle cx=\"24\" cy=\"24\" r=\"24\" fill=\"#87bbfd\" />\n                          <path d=\"M31 9H5.27A24 24 0 0 0 .53 29H17l-2-4a6 6 0 1 1 6-6l12 2V11a2 2 0 0 0-2-2z\" fill=\"#555abf\" />\n                          <path d=\"M43.76 19H17a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h22.19a2 2 0 0 0 1.5-.67 21.92 21.92 0 0 0 5.06-17.62A2 2 0 0 0 43.76 19zM33 35a6 6 0 1 1 6-6 6 6 0 0 1-6 6z\" fill=\"#fff\" />\n                      </svg>\n                      <h1 className=\"display-5 title-dark center\">Become a Backer</h1>\n                      <p className=\"common-body-text text-dark-bg center\">\n                          Do you Find Nanoleaf Layout helpful or use it at work? Become a backer and support Nanoleaf\n                          layout with a with a one time or monthly donation.\n                      </p>\n                      <button className=\"common-Button common-Button--default m-3\"  data-toggle=\"modal\" data-target=\"#payment-modal\">\n                          Become a Backer <span className=\"fas fa-credit-card\" />\n                      </button>\n                  </div>\n              </div>\n          </div>\n          {/* Support Section */}\n          <div className=\"row section-gray pl-5 d-flex align-items-center\" id=\"support\">\n              <div className=\"col-md-4 offset-md-2\">\n                  <h1 className=\"title\">\n                    <span className=\"subtitle\">\n                      Need Help\n                    </span>\n                      Get in touch or submit a bug.\n                  </h1>\n              </div>\n              <div className=\"col-md-4\">\n                  <a href=\"mailto:cbartram3@gmail.com\" className=\"common-Button common-Button--default m-3\">Contact Us <span className=\"fas fa-phone\" /></a>\n                  <a href=\"https://github.com/cbartram/nanoleaf-layout/issues\" className=\"common-Button m-3\">Submit a Bug <span className=\"fab fa-github\" /></a>\n              </div>\n          </div>\n          <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const basicExample = `import NanoleafLayout from 'nanoleaf-layout/lib/NanoleafLayout';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n  }\n  \n  render() {\n    return (\n        <NanoleafLayout \n            data={{  \n               numPanels:2,\n               sideLength:150,\n               positionData:[  \n                  {  \n                     panelId:107,\n                     x:-74,\n                     y:43,\n                     o:180\n                  },\n                  {  \n                     panelId:114,\n                     x:-149,\n                     y:0,\n                     o:360\n                  }\n               ]\n            }} \n        />\n    )\n}`;\n\nexport const colorExample = `import NanoleafLayout from 'nanoleaf-layout/lib/NanoleafLayout';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = { data }\n  }\n  \n  render() {\n    return (\n        <NanoleafLayout\n            data={{\n                  numPanels: 10,\n                  sideLength: 150,\n                  positionData: [{\n                      panelId: 1,\n                      x: 100,\n                      y: 100,\n                      o: 0,\n                      color: '#408af8',\n                      strokeColor: '#00ff00'\n                  }, {\n                      panelId: 2,\n                      x: 25,\n                      y: -29,\n                      o: 240,\n                      color: 'blue',\n                      strokeColor: '#00ff00'\n                  }, {\n                      panelId: 3,\n                      x: 174,\n                      y: -29,\n                      o: 120,\n                      color: '#3ecf8e',\n                      strokeColor: '#00ff00'\n                  }, {\n                      panelId: 4,\n                      x: 99,\n                      y: 13,\n                      o: 180,\n                      color: '#d7fafc'\n                  }, {\n                      panelId: 5,\n                      x: 99,\n                      y: -159,\n                      o: 0,\n                      color: '#6B7C93'\n                  }, {\n                      panelId: 6,\n                      x: 25,\n                      y: -116,\n                      o: 60,\n                      color: '#6772e5'\n                  }]\n              }}\n        />\n    )\n  }\n`;\n\nexport const mappingExample = `let { positionData } = await (await fetch(...)).json();\n      positionData = positionData.map(panel => ({ \n          ...panel, \n          color: '<YOUR_DESIRED_COLOR>', \n          strokeColor: '#ACFF01'\n      }));`;\n\nexport const propsExample = `import NanoleafLayout from 'nanoleaf-layout/lib/NanoleafLayout';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = { data }\n  }\n  \n  render() {\n    return (\n        <NanoleafLayout\n            strokeWidth={10} \n             // Shows transformations and rotations\n            development={true}\n            // Style the enclosing SVG with a drop shadow\n            svgStyle={{\n                color: '#6b7c93',\n                boxShadow: '0 13px 27px -5px rgba(50,50,93,.25), 0 8px 16px -8px rgba(0,0,0,.3)',\n                borderRadius: 8,\n            }}\n            data={{\n                    numPanels: 10,\n                    sideLength: 150,\n                    positionData: [{  \n                       panelId:1,\n                       x:100,\n                       y:100,\n                       o:60\n                    }, {  \n                       panelId:2,\n                       x:324,\n                       y:56,\n                       o:0\n                    }, {  \n                       panelId:3,\n                       x:249,\n                       y:-159,\n                       o:60\n                    }, {  \n                       panelId:4,\n                       x:174,\n                       y:56,\n                       o:240\n                    }, {  \n                       panelId:5,\n                       x:324,\n                       y:-29,\n                       o:60\n                    }, {  \n                       panelId:6,\n                       x:-49,\n                       y:100,\n                       o:60\n                    },{  \n                       panelId:7,\n                       x:399,\n                       y:99,\n                       o:300\n                    }, {  \n                       panelId:8,\n                       x:174,\n                       y:-29,\n                       o:60\n                    }, {  \n                       panelId:9,\n                       x:25,\n                       y:56,\n                       o:120\n                    }, {  \n                       panelId:10,\n                       x:249,\n                       y:-73,\n                       o:240\n                    }]\n                }}\n        />\n    )\n}`;\n\nexport const eventExample = `import NanoleafLayout from \"nanoleaf-layout/lib/nanoleaf-layout\";\nimport React, { Component } from 'react';\n\nlet data = {\n    numPanels: 10,\n    sideLength: 150,\n    positionData: [{\n        panelId: 1,\n        x: 100,\n        y: 100,\n        o: 0,\n        color: '#3ECF8E'\n    }, {\n        panelId: 2,\n        x: 25,\n        y: -29,\n        o: 240,\n        color: '#3ECF8E'\n    }, {\n        panelId: 3,\n        x: 174,\n        y: -29,\n        o: 120,\n        color: '#3ECF8E'\n    }, {\n        panelId: 4,\n        x: 99,\n        y: 13,\n        o: 180,\n        color: '#3ECF8E'\n    }]\n};\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = { data }\n  }\n  \n  render() {\n    return (\n      <NanoleafLayout\n        data={data}\n        onClick={({ panelId }) => {\n            panelId === 4 ? \n            alert('Panel 4 has been clicked!') : \n            alert('Wrong Panel Clicked Try Clicking #4');\n        }}\n        onExit={() => {\n            let { positionData } = this.state.data;\n\n            // Convert all panels back to green\n            let panelToChange = positionData\n                .map(panel => {\n                    return {\n                        ...panel,\n                        color: '#3ECF8E'\n                    }\n            });\n            positionData = [...panelToChange];\n            this.setState({\n                data: {\n                    panelSize\n                }\n            });\n              }}\n          onHover={({ panelId }) => {\n            let { positionData } = this.state.data;\n\n            // A Single Panel being hovered over\n            let panelToChange = positionData\n                .filter(panel => panel.panelId === panelId)[0];\n                \n            // All the other panels    \n            let otherPanels = positionData\n                .filter(panel => panel.panelId !== panelId)\n                .map(panel => {\n                    // Set all other panels to green\n                    return {\n                        ...panel,\n                        color: '#3ECF8E'\n                    }\n                });\n                \n            // Update the hovered panel to blue   \n            panelToChange.color = '#70e6ff';\n            positionData = [...otherPanels, panelToChange];\n            \n            // Update our applications state!\n            this.setState({ positionData })\n      />\n    );\n  }\n}`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}